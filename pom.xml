<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.mwttg</groupId>
    <artifactId>java-wavefront-reader</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>16</maven.compiler.source>
        <maven.compiler.target>16</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Dependency Versions sorted alphabetically -->
        <checkstyle.version>8.45.1</checkstyle.version>
        <joml.version>1.10.1</joml.version>
        <logback.version>1.2.5</logback.version>
        <plantUml.version>8059</plantUml.version>
        <!-- Dependencies for Tests -->
        <assertJ.version>3.20.2</assertJ.version>
        <mockito.version>3.11.2</mockito.version>
        <testng.version>7.4.0</testng.version>
        <!-- Plugins -->
        <jacoco.version>0.8.7</jacoco.version>
        <mavenPluginCheckstyle.version>3.1.2</mavenPluginCheckstyle.version>
        <plantUmlJeluard.version>1.2</plantUmlJeluard.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.joml</groupId>
            <artifactId>joml</artifactId>
            <version>${joml.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <!-- Dependencies for Tests -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertJ.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${mavenPluginCheckstyle.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${checkstyle.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <consoleOutput>true</consoleOutput>
                    <encoding>UTF-8</encoding>
                    <failsOnError>true</failsOnError>
                    <failOnViolation>true</failOnViolation>
                    <configLocation>checkstyle.xml</configLocation>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.jeluard</groupId>
                <artifactId>plantuml-maven-plugin</artifactId>
                <version>${plantUmlJeluard.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>net.sourceforge.plantuml</groupId>
                        <artifactId>plantuml</artifactId>
                        <version>${plantUml.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <sourceFiles>
                        <directory>${basedir}/documentation</directory>
                        <includes>/**/*.puml</includes>
                    </sourceFiles>
                    <outputInSourceDirectory>true</outputInSourceDirectory>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <url>https://github.com/mwttg/java-wavefront-reader</url>
    <organization>
        <name>private</name>
        <url>https://github.com/mwttg</url>
    </organization>
    <developers>
        <developer>
            <id>mwttg</id>
            <email>Marco-Wittig@gmx.de</email>
        </developer>
    </developers>

</project>